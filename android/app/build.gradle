plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.example.dictionary"
    
    // Set compileSdkVersion to 34 as required by the plugin path_provider_android
    def compileSdkVersion = localProperties.getProperty('flutter.compileSdkVersion') ?: "34" 
    compileSdk = compileSdkVersion.toInteger()
    
    def ndkVersion = localProperties.getProperty('flutter.ndkVersion')
    ndkVersion = ndkVersion != null ? ndkVersion : "21.3.6528147" // Use a default NDK version if null

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.example.dictionary"
        
        def minSdkVersion = localProperties.getProperty('flutter.minSdkVersion') ?: "21"
        minSdk = minSdkVersion.toInteger()

        // Set targetSdkVersion to 34 to match compileSdkVersion
        def targetSdkVersion = localProperties.getProperty('flutter.targetSdkVersion') ?: "34"
        targetSdk = targetSdkVersion.toInteger()
        
        def versionCodeStr = localProperties.getProperty('flutter.versionCode')
        versionCode = versionCodeStr != null ? versionCodeStr.toInteger() : 1 // Default to 1 if null
        
        def versionNameStr = localProperties.getProperty('flutter.versionName')
        versionName = versionNameStr != null ? versionNameStr : "1.0" // Default to "1.0" if null
    }

    signingConfigs {
        release {
            keyAlias = keystoreProperties['keyAlias']
            keyPassword = keystoreProperties['keyPassword']
            storeFile = keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword = keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source = "../.."
}
